Terminals which are not used

   IFY
   IFX


Grammar

    0 $accept: PROGRAM $end

    1 @1: /* empty */

    2 PROGRAM: _DECLARE declaration_list @1 _BEGIN commands _END

    3 declaration_list: dec_seq declaration

    4 dec_seq: /* empty */
    5        | dec_seq declaration

    6 declaration: INTEGER id_seq IDENTIFIER ';'

    7 @2: /* empty */

    8 declaration: @2 id_seq IDENTIFIER ';'
    9            | INTEGER id_seq IDENTIFIER

   10 id_seq: /* empty */
   11       | id_seq IDENTIFIER ','

   12 commands: /* empty */
   13         | commands command ';'

   14 command: SKIP
   15        | READ IDENTIFIER
   16        | READ
   17        | WRITE
   18        | IDENTIFIER
   19        | WRITE expr
   20        | IDENTIFIER ASSIGNOP expr
   21        | IDENTIFIER ASSIGNOP
   22        | IDENTIFIER expr
   23        | IDENTIFIER '=' expr

   24 @3: /* empty */

   25 @4: /* empty */

   26 command: WHILE @3 expr @4 DO commands DONE
   27        | ifstat

   28 @5: /* empty */

   29 @6: /* empty */

   30 @7: /* empty */

   31 ifstat: IF expr @5 THEN commands @6 ELSE commands @7 FI

   32 expr: NUMBER
   33     | IDENTIFIER
   34     | expr '+' expr
   35     | expr '-' expr
   36     | expr '*' expr
   37     | expr '/' expr
   38     | expr '>' expr
   39     | expr '<' expr
   40     | expr '=' expr
   41     | expr LE_ expr
   42     | expr GE_ expr
   43     | expr NE_ expr
   44     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 44
')' (41) 44
'*' (42) 36
'+' (43) 34
',' (44) 11
'-' (45) 35
'/' (47) 37
';' (59) 6 8 13
'<' (60) 39
'=' (61) 23 40
'>' (62) 38
error (256)
NUMBER (258) 32
IDENTIFIER (259) 6 8 9 11 15 18 20 21 22 23 33
WHILE (260) 26
IF (261) 31
ASSIGNOP (262) 20 21
_DECLARE (263) 2
_BEGIN (264) 2
_END (265) 2
READ (266) 15 16
WRITE (267) 17 19
DO (268) 26
DONE (269) 26
INTEGER (270) 6 9
FI (271) 31
THEN (272) 31
SKIP (273) 14
ELSE (274) 31
IFY (275)
NE_ (276) 43
GE_ (277) 42
LE_ (278) 41
IFX (279)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
PROGRAM (37)
    on left: 2, on right: 0
@1 (38)
    on left: 1, on right: 2
declaration_list (39)
    on left: 3, on right: 2
dec_seq (40)
    on left: 4 5, on right: 3 5
declaration (41)
    on left: 6 8 9, on right: 3 5
@2 (42)
    on left: 7, on right: 8
id_seq (43)
    on left: 10 11, on right: 6 8 9 11
commands (44)
    on left: 12 13, on right: 2 13 26 31
command (45)
    on left: 14 15 16 17 18 19 20 21 22 23 26 27, on right: 13
@3 (46)
    on left: 24, on right: 26
@4 (47)
    on left: 25, on right: 26
ifstat (48)
    on left: 31, on right: 27
@5 (49)
    on left: 28, on right: 31
@6 (50)
    on left: 29, on right: 31
@7 (51)
    on left: 30, on right: 31
expr (52)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44,
    on right: 19 20 22 23 26 31 34 35 36 37 38 39 40 41 42 43 44


state 0

    0 $accept: . PROGRAM $end

    _DECLARE  shift, and go to state 1

    PROGRAM  go to state 2


state 1

    2 PROGRAM: _DECLARE . declaration_list @1 _BEGIN commands _END

    $default  reduce using rule 4 (dec_seq)

    declaration_list  go to state 3
    dec_seq           go to state 4


state 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 5


state 3

    2 PROGRAM: _DECLARE declaration_list . @1 _BEGIN commands _END

    $default  reduce using rule 1 (@1)

    @1  go to state 6


state 4

    3 declaration_list: dec_seq . declaration
    5 dec_seq: dec_seq . declaration

    INTEGER  shift, and go to state 7

    $default  reduce using rule 7 (@2)

    declaration  go to state 8
    @2           go to state 9


state 5

    0 $accept: PROGRAM $end .

    $default  accept


state 6

    2 PROGRAM: _DECLARE declaration_list @1 . _BEGIN commands _END

    _BEGIN  shift, and go to state 10


state 7

    6 declaration: INTEGER . id_seq IDENTIFIER ';'
    9            | INTEGER . id_seq IDENTIFIER

    $default  reduce using rule 10 (id_seq)

    id_seq  go to state 11


state 8

    3 declaration_list: dec_seq declaration .
    5 dec_seq: dec_seq declaration .

    _BEGIN    reduce using rule 3 (declaration_list)
    $default  reduce using rule 5 (dec_seq)


state 9

    8 declaration: @2 . id_seq IDENTIFIER ';'

    $default  reduce using rule 10 (id_seq)

    id_seq  go to state 12


state 10

    2 PROGRAM: _DECLARE declaration_list @1 _BEGIN . commands _END

    $default  reduce using rule 12 (commands)

    commands  go to state 13


state 11

    6 declaration: INTEGER id_seq . IDENTIFIER ';'
    9            | INTEGER id_seq . IDENTIFIER
   11 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 14


state 12

    8 declaration: @2 id_seq . IDENTIFIER ';'
   11 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 15


state 13

    2 PROGRAM: _DECLARE declaration_list @1 _BEGIN commands . _END
   13 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    _END        shift, and go to state 19
    READ        shift, and go to state 20
    WRITE       shift, and go to state 21
    SKIP        shift, and go to state 22

    command  go to state 23
    ifstat   go to state 24


state 14

    6 declaration: INTEGER id_seq IDENTIFIER . ';'
    9            | INTEGER id_seq IDENTIFIER .
   11 id_seq: id_seq IDENTIFIER . ','

    ';'  shift, and go to state 25
    ','  shift, and go to state 26

    $default  reduce using rule 9 (declaration)


state 15

    8 declaration: @2 id_seq IDENTIFIER . ';'
   11 id_seq: id_seq IDENTIFIER . ','

    ';'  shift, and go to state 27
    ','  shift, and go to state 26


state 16

   18 command: IDENTIFIER .
   20        | IDENTIFIER . ASSIGNOP expr
   21        | IDENTIFIER . ASSIGNOP
   22        | IDENTIFIER . expr
   23        | IDENTIFIER . '=' expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    ASSIGNOP    shift, and go to state 30
    '='         shift, and go to state 31
    '('         shift, and go to state 32

    $default  reduce using rule 18 (command)

    expr  go to state 33


state 17

   26 command: WHILE . @3 expr @4 DO commands DONE

    $default  reduce using rule 24 (@3)

    @3  go to state 34


state 18

   31 ifstat: IF . expr @5 THEN commands @6 ELSE commands @7 FI

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 35


state 19

    2 PROGRAM: _DECLARE declaration_list @1 _BEGIN commands _END .

    $default  reduce using rule 2 (PROGRAM)


state 20

   15 command: READ . IDENTIFIER
   16        | READ .

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 16 (command)


state 21

   17 command: WRITE .
   19        | WRITE . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    $default  reduce using rule 17 (command)

    expr  go to state 37


state 22

   14 command: SKIP .

    $default  reduce using rule 14 (command)


state 23

   13 commands: commands command . ';'

    ';'  shift, and go to state 38


state 24

   27 command: ifstat .

    $default  reduce using rule 27 (command)


state 25

    6 declaration: INTEGER id_seq IDENTIFIER ';' .

    $default  reduce using rule 6 (declaration)


state 26

   11 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 11 (id_seq)


state 27

    8 declaration: @2 id_seq IDENTIFIER ';' .

    $default  reduce using rule 8 (declaration)


state 28

   32 expr: NUMBER .

    $default  reduce using rule 32 (expr)


state 29

   33 expr: IDENTIFIER .

    $default  reduce using rule 33 (expr)


state 30

   20 command: IDENTIFIER ASSIGNOP . expr
   21        | IDENTIFIER ASSIGNOP .

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    $default  reduce using rule 21 (command)

    expr  go to state 39


state 31

   23 command: IDENTIFIER '=' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 40


state 32

   44 expr: '(' . expr ')'

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 41


state 33

   22 command: IDENTIFIER expr .
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 22 (command)


state 34

   26 command: WHILE @3 . expr @4 DO commands DONE

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 52


state 35

   31 ifstat: IF expr . @5 THEN commands @6 ELSE commands @7 FI
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 28 (@5)

    @5  go to state 53


state 36

   15 command: READ IDENTIFIER .

    $default  reduce using rule 15 (command)


state 37

   19 command: WRITE expr .
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 19 (command)


state 38

   13 commands: commands command ';' .

    $default  reduce using rule 13 (commands)


state 39

   20 command: IDENTIFIER ASSIGNOP expr .
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 20 (command)


state 40

   23 command: IDENTIFIER '=' expr .
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 23 (command)


state 41

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr
   44     | '(' expr . ')'

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 54


state 42

   40 expr: expr '=' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 55


state 43

   43 expr: expr NE_ . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 56


state 44

   39 expr: expr '<' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 57


state 45

   38 expr: expr '>' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 58


state 46

   42 expr: expr GE_ . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 59


state 47

   41 expr: expr LE_ . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 60


state 48

   34 expr: expr '+' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 61


state 49

   35 expr: expr '-' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 62


state 50

   36 expr: expr '*' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 63


state 51

   37 expr: expr '/' . expr

    NUMBER      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    '('         shift, and go to state 32

    expr  go to state 64


state 52

   26 command: WHILE @3 expr . @4 DO commands DONE
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 25 (@4)

    @4  go to state 65


state 53

   31 ifstat: IF expr @5 . THEN commands @6 ELSE commands @7 FI

    THEN  shift, and go to state 66


state 54

   44 expr: '(' expr ')' .

    $default  reduce using rule 44 (expr)


state 55

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   40     | expr '=' expr .
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 40 (expr)


state 56

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr
   43     | expr NE_ expr .

    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    GE_  shift, and go to state 46
    LE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 43 (expr)


state 57

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   39     | expr '<' expr .
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 39 (expr)


state 58

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   38     | expr '>' expr .
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 38 (expr)


state 59

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   42     | expr GE_ expr .
   43     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 42 (expr)


state 60

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   41     | expr LE_ expr .
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 41 (expr)


state 61

   34 expr: expr . '+' expr
   34     | expr '+' expr .
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 34 (expr)


state 62

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   35     | expr '-' expr .
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 35 (expr)


state 63

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   36     | expr '*' expr .
   37     | expr . '/' expr
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    $default  reduce using rule 36 (expr)


state 64

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   37     | expr '/' expr .
   38     | expr . '>' expr
   39     | expr . '<' expr
   40     | expr . '=' expr
   41     | expr . LE_ expr
   42     | expr . GE_ expr
   43     | expr . NE_ expr

    $default  reduce using rule 37 (expr)


state 65

   26 command: WHILE @3 expr @4 . DO commands DONE

    DO  shift, and go to state 67


state 66

   31 ifstat: IF expr @5 THEN . commands @6 ELSE commands @7 FI

    $default  reduce using rule 12 (commands)

    commands  go to state 68


state 67

   26 command: WHILE @3 expr @4 DO . commands DONE

    $default  reduce using rule 12 (commands)

    commands  go to state 69


state 68

   13 commands: commands . command ';'
   31 ifstat: IF expr @5 THEN commands . @6 ELSE commands @7 FI

    IDENTIFIER  shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    READ        shift, and go to state 20
    WRITE       shift, and go to state 21
    SKIP        shift, and go to state 22

    $default  reduce using rule 29 (@6)

    command  go to state 23
    ifstat   go to state 24
    @6       go to state 70


state 69

   13 commands: commands . command ';'
   26 command: WHILE @3 expr @4 DO commands . DONE

    IDENTIFIER  shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    READ        shift, and go to state 20
    WRITE       shift, and go to state 21
    DONE        shift, and go to state 71
    SKIP        shift, and go to state 22

    command  go to state 23
    ifstat   go to state 24


state 70

   31 ifstat: IF expr @5 THEN commands @6 . ELSE commands @7 FI

    ELSE  shift, and go to state 72


state 71

   26 command: WHILE @3 expr @4 DO commands DONE .

    $default  reduce using rule 26 (command)


state 72

   31 ifstat: IF expr @5 THEN commands @6 ELSE . commands @7 FI

    $default  reduce using rule 12 (commands)

    commands  go to state 73


state 73

   13 commands: commands . command ';'
   31 ifstat: IF expr @5 THEN commands @6 ELSE commands . @7 FI

    IDENTIFIER  shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    READ        shift, and go to state 20
    WRITE       shift, and go to state 21
    SKIP        shift, and go to state 22

    $default  reduce using rule 30 (@7)

    command  go to state 23
    ifstat   go to state 24
    @7       go to state 74


state 74

   31 ifstat: IF expr @5 THEN commands @6 ELSE commands @7 . FI

    FI  shift, and go to state 75


state 75

   31 ifstat: IF expr @5 THEN commands @6 ELSE commands @7 FI .

    $default  reduce using rule 31 (ifstat)
